x-django-env: &django-env
  TZ: Europe/Paris
  DEBUG: "False" # True or False
  MIGRATION: "true" # true or false

x-pgsql-healtcheck: &healthcheck
  test: ["CMD-SHELL", "pg_isready --dbname=$$POSTGRES_DB --username=$$POSTGRES_USER"]
  interval: 10s
  timeout: 5s
  retries: 5

##### ========== Django Projects ========================================= #####
services:
  auth:
    build:
      context: "requirements/auth"
      target: production
    depends_on:
      auth-db:
        condition: service_healthy
    restart: unless-stopped
    environment:
      <<: *django-env
      POSTGRES_DB: ${POSTGRES_AUTH_DB_NAME}
      POSTGRES_USER: ${POSTGRES_AUTH_USER}
      POSTGRES_PASSWORD: ${POSTGRES_AUTH_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_AUTH_HOST}
      SECRET_KEY: ${DJANGO_AUTH_SECRET_KEY}
    networks:
      - transcendence-network
      - auth-network

  chat:
    build:
      context: "requirements/chat"
      target: production
    depends_on:
      chat-db:
        condition: service_healthy
    restart: unless-stopped
    ports:
      - "8002:8000"
    environment:
      <<: *django-env
      POSTGRES_DB: ${POSTGRES_CHAT_DB_NAME}
      POSTGRES_USER: ${POSTGRES_CHAT_USER}
      POSTGRES_PASSWORD: ${POSTGRES_CHAT_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_CHAT_HOST}
      SECRET_KEY: ${DJANGO_CHAT_SECRET_KEY}
    networks:
      - transcendence-network
      - chat-network

  frontend:
    build:
      context: "requirements/frontend"
      target: vps
    restart: unless-stopped
    ports:
      - "443:443"
      - "80:80"
    networks:
      - transcendence-network
    environment:
      TZ: Europe/Paris
      HOSTNAME: ${HOSTNAME}

  game:
    build:
      context: "requirements/game"
      target: production
    depends_on:
      game-db:
        condition: service_healthy
    restart: unless-stopped
    ports:
      - "8003:8000"
    environment:
      <<: *django-env
      POSTGRES_DB: ${POSTGRES_GAME_DB_NAME}
      POSTGRES_USER: ${POSTGRES_GAME_USER}
      POSTGRES_PASSWORD: ${POSTGRES_GAME_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_GAME_HOST}
      SECRET_KEY: ${DJANGO_GAME_SECRET_KEY}
      GAME_PLAYER_CONNECT_TIMEOUT: ${GAME_PLAYER_CONNECT_TIMEOUT}
      GAME_SERVER_PORT: ${GAME_SERVER_PORT}
    networks:
      - transcendence-network
      - game-network

  matchmaking:
    build:
      context: "requirements/matchmaking"
      target: production
    depends_on:
      matchmaking-db:
        condition: service_healthy
    restart: unless-stopped
    environment:
      <<: *django-env
      POSTGRES_DB: ${POSTGRES_MATCHMAKING_DB_NAME}
      POSTGRES_USER: ${POSTGRES_MATCHMAKING_USER}
      POSTGRES_PASSWORD: ${POSTGRES_MATCHMAKING_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_MATCHMAKING_HOST}
      SECRET_KEY: ${DJANGO_MATCHMAKING_SECRET_KEY}
    networks:
      - transcendence-network
      - matchmaking-network

  users:
    build:
      context: "requirements/users"
      target: production
    depends_on:
      users-db:
        condition: service_healthy
      event-queue:
        condition: service_healthy
    restart: unless-stopped
    ports:
      - "8005:8000"
    environment:
      <<: *django-env
      POSTGRES_DB: ${POSTGRES_USERS_DB_NAME}
      POSTGRES_USER: ${POSTGRES_USERS_USER}
      POSTGRES_PASSWORD: ${POSTGRES_USERS_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_USERS_HOST}
      SECRET_KEY: ${DJANGO_USERS_SECRET_KEY}
    networks:
      - transcendence-network
      - redis-network
      - users-network

##### ========== Event-queue ============================================= #####
  event-queue:
    restart: unless-stopped
    image: redis:alpine
    networks:
        - redis-network
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

##### ========== Database ================================================ #####
  auth-db:
    image: postgres:14
    restart: unless-stopped
    volumes:
      - auth-db-volume:/var/lib/postgresql/data
    environment:
      TZ: Europe/Paris
      POSTGRES_DB: ${POSTGRES_AUTH_DB_NAME}
      POSTGRES_USER: ${POSTGRES_AUTH_USER}
      POSTGRES_PASSWORD: ${POSTGRES_AUTH_PASSWORD}
    networks:
      - auth-network
    healthcheck: *healthcheck

  chat-db:
    image: postgres:14
    restart: unless-stopped
    volumes:
      - chat-db-volume:/var/lib/postgresql/data
    environment:
      TZ: Europe/Paris
      POSTGRES_DB: ${POSTGRES_CHAT_DB_NAME}
      POSTGRES_USER: ${POSTGRES_CHAT_USER}
      POSTGRES_PASSWORD: ${POSTGRES_CHAT_PASSWORD}
    networks:
      - chat-network
    healthcheck: *healthcheck

  game-db:
    image: postgres:14
    restart: unless-stopped
    volumes:
      - game-db-volume:/var/lib/postgresql/data
    environment:
      TZ: Europe/Paris
      POSTGRES_DB: ${POSTGRES_GAME_DB_NAME}
      POSTGRES_USER: ${POSTGRES_GAME_USER}
      POSTGRES_PASSWORD: ${POSTGRES_GAME_PASSWORD}
    networks:
      - game-network
    healthcheck: *healthcheck

  matchmaking-db:
    image: postgres:14
    restart: unless-stopped
    volumes:
      - matchmaking-db-volume:/var/lib/postgresql/data
    environment:
      TZ: Europe/Paris
      POSTGRES_DB: ${POSTGRES_MATCHMAKING_DB_NAME}
      POSTGRES_USER: ${POSTGRES_MATCHMAKING_USER}
      POSTGRES_PASSWORD: ${POSTGRES_MATCHMAKING_PASSWORD}
    networks:
      - matchmaking-network
    healthcheck: *healthcheck

  users-db:
    image: postgres:14
    restart: unless-stopped
    volumes:
      - users-db-volume:/var/lib/postgresql/data
    environment:
      TZ: Europe/Paris
      POSTGRES_DB: ${POSTGRES_USERS_DB_NAME}
      POSTGRES_USER: ${POSTGRES_USERS_USER}
      POSTGRES_PASSWORD: ${POSTGRES_USERS_PASSWORD}
    networks:
      - users-network
    healthcheck: *healthcheck

networks:
##### ========== Global network ========================================== #####
  transcendence-network:
    name: transcendence-network
    driver: bridge

##### ========== Event-queue network ===================================== #####
  redis-network:
    name: redis-network
    driver: bridge

##### ========== DB to Django networks =================================== #####
  auth-network:
    name: auth-network
    driver: bridge

  chat-network:
    name: chat-network
    driver: bridge

  game-network:
    name: game-network
    driver: bridge

  matchmaking-network:
    name: matchmaking-network
    driver: bridge

  users-network:
    name: users-network
    driver: bridge

volumes:
#####Database Volumes
  auth-db-volume:
    name: "auth-db-volume"

  chat-db-volume:
    name: "chat-db-volume"

  game-db-volume:
    name: "game-db-volume"

  matchmaking-db-volume:
    name: "matchmaking-db-volume"

  users-db-volume:
    name: "users-db-volume"
