services:
  frontend:
    image: caddy:2.8.4
    ports:
      - "4443:443"
    volumes:
      - frontend-volume:/var/www/html
      - ./requirements/frontend/Caddyfile:/etc/caddy/Caddyfile

  users:
    depends_on:
      - auth
      - users-db
    build: requirements/users
    restart: on-failure
    ports:
      - "8005:8000"
    networks:
      - transcendence-nw
      - users-nw
    volumes:
      - users-volume:/code
  users-db:
    image: postgres:14
    restart: always
    volumes:
      - "users-db-volume:/var/lib/postgresql/data"
    environment:
      - POSTGRES_DB=users_db
      - POSTGRES_USER=fguirama # todo : use .env
      - POSTGRES_PASSWORD=123456 # todo : use .env
    networks:
      - users-nw

  game:
    depends_on:
      - game-db
    build: requirements/game
    restart: on-failure
    ports:
      - "8004:8000"
    networks:
      - transcendence-nw
      - game-nw
    volumes:
      - game-volume:/code
  game-db:
    image: postgres:14
    restart: always
    volumes:
      - game-db-volume:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=ft_transcendence_db
      - POSTGRES_USER=fguirama
      - POSTGRES_PASSWORD=123456
    networks:
      - game-nw

  matchmaking:
    build: requirements/matchmaking
    restart: on-failure
    ports:
      - "8003:8000"
    networks:
      - transcendence-nw
    volumes:
      - matchmaking-volume:/code

  chat:
    depends_on:
      - chat-db
    build: requirements/chat
    restart: on-failure
    ports:
      - "8002:8000"
    networks:
      - transcendence-nw
      - chat-nw
    volumes:
      - chat-volume:/code
  chat-db:
    image: postgres:14
    restart: always
    volumes:
      - chat-db-volume:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=ft_transcendence_db
      - POSTGRES_USER=fguirama
      - POSTGRES_PASSWORD=123456
    networks:
      - chat-nw

  auth:
    depends_on:
      - auth-db
    build:
      context: requirements/auth
      dockerfile: Dockerfile
    restart: always
    volumes:
      - auth-volume:/code
    ports:
      - "8000:8000"
    networks:
      - transcendence-nw
      - auth-nw
  auth-db:
    image: postgres:14
    restart: always
    volumes:
      - "auth-db-volume:/var/lib/postgresql/data/"
    environment:
      - POSTGRES_DB=auth_db
      - POSTGRES_USER=fguirama # todo : use .env
      - POSTGRES_PASSWORD=123456 # todo : use .env
    networks:
      - auth-nw

  statistics:
    # image: requirements/algo-sats
    restart: always
    build: requirements/algo-stats
    ports:
      - "8001:8000"
    volumes:
      - statistics-volume:/code
    networks:
      - statistics-nw
      - transcendence-nw
  statistics-db:
    image: postgres:14
    restart: always
    volumes:
      - statistics-db-volume:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=ft_transcendence_db
      - POSTGRES_USER=fguirama
      - POSTGRES_PASSWORD=123456
    networks:
      - statistics-nw

networks:
  transcendence-nw:
    name: transcendence-network
    driver: bridge
  auth-nw:
    name: authentication-network
    driver: bridge
  statistics-nw:
    name: statistics-network
    driver: bridge
  game-nw:
    name: game-network
    driver: bridge
  chat-nw:
    name: chat-network
    driver: bridge
  users-nw:
    name: users-network
    driver: bridge

volumes:
  frontend-volume:
    name: frontend-volume
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "requirements/frontend/static/"
  caddyfile-volume:
    name: caddyfile-volume
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "requirements/frontend/Caddyfile/"
  users-volume:
    name: users-volume
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "requirements/users/django/"
  users-db-volume:
    name: users-database-volume
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "$HOME/transcendence/users-db/"
  game-volume:
    name: game-volume
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "requirements/game/game/"
  game-db-volume:
    name: database-volume
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "$HOME/transcendence/game/"
  chat-db-volume:
    name: database-volume
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "$HOME/transcendence/chat-db/"
  chat-volume:
    name: chat-volume
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "requirements/chat/chat/"
  auth-db-volume:
    name: auth-db-volume
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "$HOME/transcendence/auth-db/"
  auth-volume:
    name: auth-volume
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "requirements/auth/django/"
  statistics-db-volume:
    name: stat-db-volume
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "$HOME/transcendence/stats-db/"
  statistics-volume:
    name: stat-volume
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "requirements/algo-stats/algo_stats/"
  matchmaking-volume:
    name: matchmaking-volume
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "requirements/matchmaking/matchmaking/"
